from aiogram import types
from aiogram.dispatcher import FSMContext  # –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from loguru import logger  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é loguru

from keyboards.user_keyboards import create_greeting_keyboard  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å—Ç–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
from system.dispatcher import dp, bot  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import sqlite3


@dp.message_handler(commands=['start'])
async def greeting(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_id = message.from_user.id
        username = message.from_user.username
        first_name = message.from_user.first_name
        last_name = message.from_user.last_name
        join_date = message.date.strftime("%Y-%m-%d %H:%M:%S")
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect("your_database.db")  # –ó–∞–º–µ–Ω–∏—Ç–µ "your_database.db" –Ω–∞ –∏–º—è –≤–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS users_start (user_id INTEGER PRIMARY KEY, username TEXT, first_name TEXT, last_name TEXT, join_date TEXT)''')
        cursor.execute("INSERT OR REPLACE INTO users_start (user_id, username, first_name, last_name, join_date) "
                       "VALUES (?, ?, ?, ?, ?)", (user_id, username, first_name, last_name, join_date))
        conn.commit()
        conn.close()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–≤—à–∏–π /start: {user_id}, {username}, {first_name}, {last_name}, {join_date}")
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        from_user_name = message.from_user.first_name  # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        greeting_post = f"{from_user_name}, –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç ü§ñ @TeaBetNY_bot"
        keyboards_greeting = create_greeting_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å—Ç–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
        await message.answer(greeting_post, reply_markup=keyboards_greeting,
                             parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


@dp.callback_query_handler(lambda c: c.data == "disagree")
async def disagree_handler(callback_query: types.CallbackQuery, state: FSMContext):
    try:
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.reset_state()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        from_user_name = callback_query.from_user.first_name  # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        greeting_message = f"{from_user_name}, –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç"
        keyboards_greeting = create_greeting_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å—Ç–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
        await bot.send_message(callback_query.from_user.id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                               caption=greeting_message,  # –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               reply_markup=keyboards_greeting,  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
                               parse_mode=types.ParseMode.HTML)  # –¢–µ–∫—Å—Ç –≤ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    except Exception as error:
        logger.exception(error)


def greeting_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.register_message_handler(greeting)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
    dp.register_message_handler(disagree_handler)
